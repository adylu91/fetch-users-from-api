{"version":3,"sources":["img/loader.gif","components/Header.js","components/Main.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","props","handleClickAdd","clickAdd","handleClickReset","clickReset","isArrEmpty","isFetchRunning","btnAddUser","className","src","loader","alt","onClick","btnResetList","User","arr","userArr","map","el","picture","large","name","first","last","login","uuid","Main","usersArr","App","state","e","fetchUsers","setState","fetch","then","data1","json","data2","concat","results","catch","err","window","alert","this","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4SAAe,G,YAAA,IAA0B,oCCwC1BA,EArCA,SAACC,GACd,IAAMC,EAAiBD,EAAME,SACvBC,EAAmBH,EAAMI,WACzBC,EAAaL,EAAMK,WACnBC,EAAiBN,EAAMM,eAEvBC,EACJ,sBAAKC,UAAU,YAAf,UACGF,EACC,qBAAKE,UAAU,YAAf,SACE,qBAAKC,IAAKC,EAAQC,IAAI,aAEtB,KAEJ,wBAAQH,UAAU,MAAMI,QAASX,EAAjC,oBAMEY,EACJ,wBACEL,UAAW,QAAUH,EAAa,OAAS,IAC3CO,QAAST,EAFX,mBAQF,OACE,sBAAKK,UAAU,SAAf,UACGD,EACAM,M,OClBDC,G,MAAO,SAACd,GACZ,IAAIe,EAAMf,EAAMgB,QAAQC,KAAI,SAACC,GAC3B,OACE,sBAAyBV,UAAU,WAAnC,UACE,qBAAKC,IAAKS,EAAGC,QAAQC,MAAOT,IAAI,KAChC,qBAAKH,UAAU,gBAAf,SACGU,EAAGG,KAAKC,MAAQ,IAAMJ,EAAGG,KAAKE,SAHzBL,EAAGM,MAAMC,SASvB,OAAO,mCAAGV,MAGGW,EA9BF,SAAC1B,GACZ,IAAIe,EAAG,YAAOf,EAAM2B,UAGpB,OAFmB3B,EAAMK,WAGvB,qBAAKG,UAAU,cAAf,SACE,8EAGF,qBAAKA,UAAU,kBAAf,SACE,cAAC,EAAD,CAAMQ,QAASD,OCmDNa,E,4MAzDbC,MAAQ,CACNF,SAAU,GACVtB,YAAY,EACZC,gBAAgB,G,EAGlBL,eAAiB,SAAC6B,GAChB,EAAKC,c,EAGP5B,iBAAmB,SAAC2B,GAClB,EAAKE,SAAS,CACZL,SAAU,GACVtB,YAAY,K,EAIhB0B,WAAa,WAEX,EAAKC,SAAS,CACZ1B,gBAAgB,IAElB2B,MAJY,wCAKTC,MAAK,SAACC,GAAD,OAAWA,EAAMC,UACtBF,MAAK,SAACG,GACL,EAAKL,SAAS,CACZL,SAAU,EAAKE,MAAMF,SAASW,OAAOD,EAAME,SAC3ClC,YAAY,EACZC,gBAAgB,OAGnBkC,OAAM,SAACC,GACNC,OAAOC,MAAM,qCACb,EAAKX,SAAS,CACZ1B,gBAAgB,Q,uDAMtB,OACE,qCACE,cAAC,EAAD,CACEJ,SAAU0C,KAAK3C,eACfG,WAAYwC,KAAKzC,iBACjBE,WAAYuC,KAAKf,MAAMxB,WACvBC,eAAgBsC,KAAKf,MAAMvB,iBAE7B,cAAC,EAAD,CACEqB,SAAUiB,KAAKf,MAAMF,SACrBtB,WAAYuC,KAAKf,MAAMxB,oB,GAnDfwC,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.66137ac9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/loader.6489e7fb.gif\";","import \"./Header.css\";\r\nimport loader from \"../img/loader.gif\";\r\n\r\nconst Header = (props) => {\r\n  const handleClickAdd = props.clickAdd;\r\n  const handleClickReset = props.clickReset;\r\n  const isArrEmpty = props.isArrEmpty;\r\n  const isFetchRunning = props.isFetchRunning;\r\n\r\n  const btnAddUser = (\r\n    <div className=\"btnWraper\">\r\n      {isFetchRunning ? (\r\n        <div className=\"btnLoader\">\r\n          <img src={loader} alt=\"loader\" />\r\n        </div>\r\n      ) : null}\r\n\r\n      <button className=\"btn\" onClick={handleClickAdd}>\r\n        Add\r\n      </button>\r\n    </div>\r\n  );\r\n\r\n  const btnResetList = (\r\n    <button\r\n      className={\"btn \" + (isArrEmpty ? \"hide\" : \"\")}\r\n      onClick={handleClickReset}\r\n    >\r\n      Reset\r\n    </button>\r\n  );\r\n\r\n  return (\r\n    <div className=\"wraper\">\r\n      {btnAddUser}\r\n      {btnResetList}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import \"./Main.css\";\r\n\r\nconst Main = (props) => {\r\n  let arr = [...props.usersArr];\r\n  const isArrEmpty = props.isArrEmpty;\r\n\r\n  return isArrEmpty ? (\r\n    <div className=\"mainWrapper\">\r\n      <h2>there is nothing to show, click ADD button</h2>\r\n    </div>\r\n  ) : (\r\n    <div className=\"mainUserWrapper\">\r\n      <User userArr={arr} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst User = (props) => {\r\n  let arr = props.userArr.map((el) => {\r\n    return (\r\n      <div key={el.login.uuid} className=\"eachUser\">\r\n        <img src={el.picture.large} alt=\"\" />\r\n        <div className=\"eachUserNames\">\r\n          {el.name.first + \" \" + el.name.last}\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return <>{arr}</>;\r\n};\r\n\r\nexport default Main;\r\n","import \"./App.css\";\nimport Header from \"./Header.js\";\nimport Main from \"./Main.js\";\nimport { Component } from \"react\";\n\nclass App extends Component {\n  state = {\n    usersArr: [],\n    isArrEmpty: true,\n    isFetchRunning: false,\n  };\n\n  handleClickAdd = (e) => {\n    this.fetchUsers();\n  };\n\n  handleClickReset = (e) => {\n    this.setState({\n      usersArr: [],\n      isArrEmpty: true,\n    });\n  };\n\n  fetchUsers = () => {\n    const API = \"https://randomuser.me/api/?results=1\";\n    this.setState({\n      isFetchRunning: true,\n    });\n    fetch(API)\n      .then((data1) => data1.json())\n      .then((data2) => {\n        this.setState({\n          usersArr: this.state.usersArr.concat(data2.results),\n          isArrEmpty: false,\n          isFetchRunning: false,\n        });\n      })\n      .catch((err) => {\n        window.alert(\"Wystąpił błąd\");\n        this.setState({\n          isFetchRunning: false,\n        });\n      });\n  };\n\n  render() {\n    return (\n      <>\n        <Header\n          clickAdd={this.handleClickAdd}\n          clickReset={this.handleClickReset}\n          isArrEmpty={this.state.isArrEmpty}\n          isFetchRunning={this.state.isFetchRunning}\n        />\n        <Main\n          usersArr={this.state.usersArr}\n          isArrEmpty={this.state.isArrEmpty}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}